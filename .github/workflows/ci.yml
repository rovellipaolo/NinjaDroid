name: CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12"]
        exclude:
          - os: macos-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.11"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build
        run: |
          python -m pip install --upgrade pip
          make build
          pip install coveralls
      - name: Checkstyle
        if: ${{ matrix.python-version != '3.10' }}
        run: |
          make checkstyle
      - name: Test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          make test-coverage
          coveralls --service=github
      - name: Build coverage report (Linux only)
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('coverage.xml') != '' }}
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage.xml
          badge: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "50 75"
      - name: Show coverage report in GitHub Actions summary (Linux only)
        if: ${{ matrix.os == 'ubuntu-latest' && hashFiles('code-coverage-results.md') != '' }}
        run: |
          cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
      - name: Show coverage report in GitHub Actions summary (macOS fallback)
        if: ${{ matrix.os == 'macos-latest' && hashFiles('.coverage') != '' }}
        run: |
          echo "$(coverage3 report --data-file=".coverage" --show-missing)" >> $GITHUB_STEP_SUMMARY
