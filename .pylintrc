[MASTER]

# Specify a score threshold to be exceeded before program exits with error.
fail-under=10.0

# Disable some rules.
# For example: C0114 (missing-module-docstring), C0115 (missing-class-docstring), C0116 (missing-function-docstring).
disable=missing-module-docstring,missing-function-docstring,no-name-in-module,duplicate-code

# Add files or directories to the blacklist. They should be base names, not paths.
ignore=CVS

# Add files or directories matching the regex patterns to the blacklist.
# The regex matches against base names, not paths.
#ignore-patterns=^test_.+.py
ignore-patterns=

# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the number of processors available to use.
jobs=1

# Control the amount of potential inferred values when inferring a single object.
# This can help the performance when dealing with large functions or complex, nested conditions.
limit-inference-results=100

# When enabled, pylint would attempt to guess common misconfiguration and
# emit user-friendly hints instead of false-positive error messages.
suggestion-mode=yes


[MESSAGES CONTROL]

# Only show warnings with the listed confidence levels. Leave empty to show all.
# Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.
confidence=


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, json and msvs (visual studio).
# You can also give a reporter class, e.g. mypackage.mymodule.MyReporterClass.
output-format=text

# Tells whether to display a full report or only the messages.
reports=no

# Activate the evaluation score.
score=yes


[REFACTORING]

# Maximum number of nested blocks for function / method body
max-nested-blocks=5

# Complete name of functions that never returns.
# When checking for inconsistent-return-statements if a never returning function is called then
# it will be considered as an explicit return statement and no message will be printed.
never-returning-functions=sys.exit


[BASIC]

# Naming style matching correct argument names.
argument-naming-style=snake_case

# Naming style matching correct attribute names.
attr-naming-style=snake_case

# Naming style matching correct class attribute names.
class-attribute-naming-style=any

# Naming style matching correct class names.
class-naming-style=PascalCase

# Naming style matching correct constant names.
const-naming-style=UPPER_CASE

# Naming style matching correct function names.
function-naming-style=snake_case

# Include a hint for the correct naming format with invalid-name.
include-naming-hint=no

# Naming style matching correct inline iteration names.
inlinevar-naming-style=any

# Naming style matching correct method names.
method-naming-style=snake_case

# Naming style matching correct module names.
module-naming-style=snake_case

# Naming style matching correct variable names.
variable-naming-style=snake_case


[VARIABLES]

# Tells whether unused global variables should be treated as a violation.
allow-global-unused-variables=yes

# A regular expression matching the name of dummy variables (i.e. expected to not be used).
dummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_

# Argument names that match this expression will be ignored. Default to name with leading underscore.
ignored-argument-names=_.*|^ignored_|^unused_


[LOGGING]

# Allow usage of f-strings for logging.
disable=logging-fstring-interpolation

# The type of string formatting that logging methods do. `old` means using % formatting, `new` is for `{}` formatting.
logging-format-style=old

# Logging modules to check that the string format arguments are in logging function parameter format.
logging-modules=logging


[FORMAT]

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=

# Number of spaces of indent required inside a hanging or continued line.
indent-after-paren=4

# String used as indentation unit. This is usually "    " (4 spaces) or "\t" (1 tab).
indent-string='    '

# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=^\s*(# )?<?https?://\S+>?$

# Maximum number of characters on a single line.
#max-line-length=100
max-line-length=120

# Maximum number of lines in a module.
max-module-lines=1000

# Allow the body of a class to be on the same line as the declaration if body contains single statement.
single-line-class-stmt=no

# Allow the body of an if to be on the same line as the test if there is no else.
single-line-if-stmt=no


[SPELLING]

# Limits count of emitted suggestions for spelling mistakes.
max-spelling-suggestions=4


[STRING]

# This flag controls whether inconsistent-quotes generates a warning when the
# character used as a quote delimiter is used inconsistently within a module.
check-quote-consistency=no

# This flag controls whether the implicit-str-concat should generate a warning
# on implicit string concatenation in sequences defined over several lines.
check-str-concat-over-line-jumps=no


[MISCELLANEOUS]

# List of note tags to take in consideration, separated by a comma.
notes=FIXME, XXX


[TYPECHECK]

# Tells whether missing members accessed in mixin class should be ignored.
# A mixin class is detected if its name ends with "mixin" (case insensitive).
ignore-mixin-members=yes

# Tells whether to warn about missing members when the owner of the attribute is inferred to be None.
ignore-none=yes

# This flag controls whether pylint should warn about no-member and similar
# checks whenever an opaque object is returned when inferring. The inference
# can return multiple potential results while evaluating a Python object, but
# some branches might not be evaluated, which results in partial inference. In
# that case, it might be useful to still emit no-member and other checks for
# the rest of the inferred objects.
ignore-on-opaque-inference=yes

# Show a hint with possible names when a member name was not found.
# The aspect of finding the hint is based on edit distance.
missing-member-hint=yes

# The minimum edit distance a name should have in order to be considered a similar match for a missing member name.
missing-member-hint-distance=1

# The total number of similar names that should be taken in consideration when showing a hint for a missing member.
missing-member-max-choices=1


[SIMILARITIES]

# Ignore comments when computing similarities.
ignore-comments=yes

# Ignore docstrings when computing similarities.
ignore-docstrings=yes

# Ignore imports when computing similarities.
ignore-imports=no

# Minimum lines number of a similarity.
min-similarity-lines=4


[DESIGN]

# Maximum number of arguments for function / method.
max-args=5

# Maximum number of attributes for a class (see R0902).
max-attributes=7

# Maximum number of boolean expressions in an if statement (see R0916).
max-bool-expr=5

# Maximum number of branch for function / method body.
max-branches=12

# Maximum number of locals for function / method body.
max-locals=15

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of public methods for a class (see R0904).
max-public-methods=20

# Maximum number of return / yield for function / method body.
max-returns=6

# Maximum number of statements in function / method body.
max-statements=50

# Minimum number of public methods for a class (see R0903).
min-public-methods=2


[IMPORTS]

# Allow wildcard imports from modules that define __all__.
allow-wildcard-with-all=no


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__, __new__, setUp, __post_init__

# List of valid names for the first argument in a class method.
valid-classmethod-first-arg=cls

# List of valid names for the first argument in a metaclass class method.
valid-metaclass-classmethod-first-arg=cls


[EXCEPTIONS]

# Exceptions that will emit a warning when being caught. Defaults to "BaseException, Exception".
overgeneral-exceptions=BaseException, Exception
